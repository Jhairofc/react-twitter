{"ast":null,"code":"import _slicedToArray from\"/Users/jhairorivera/Documents/Cursos/twitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{contextAuth}from\"./utils/Context\";import Main from\"./components/Auth/Main\";import{isLogged}from\"./api/Login\";import{ToastContainer}from\"react-toastify\";import Routing from'./routers/Routing';function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),logged=_useState4[0],setLogged=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),checkLogin=_useState6[0],setCheckLogin=_useState6[1];useEffect(function(){setUser(isLogged);setLogged(true);setCheckLogin(false);},[checkLogin]);//Verifica si el usuario esta logueado o aun no\nif(!logged)return null;return/*#__PURE__*/React.createElement(contextAuth.Provider,{value:user},user?/*#__PURE__*/React.createElement(Routing,{setCheckLogin:setCheckLogin}):/*#__PURE__*/React.createElement(Main,{setCheckLogin:setCheckLogin}),/*#__PURE__*/React.createElement(ToastContainer,{position:\"top-right\",autoClose:5000,hideProgressBar:true,newestOnTop:false,closeOnClick:true,rtl:false,pauseOnFocusLoss:true,draggable:true,pauseOnHover:true}));}export default App;","map":{"version":3,"sources":["/Users/jhairorivera/Documents/Cursos/twitter/src/App.js"],"names":["React","useState","useEffect","contextAuth","Main","isLogged","ToastContainer","Routing","App","user","setUser","logged","setLogged","checkLogin","setCheckLogin"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAAQC,WAAR,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,OAAQC,QAAR,KAAuB,aAAvB,CACA,OAAQC,cAAR,KAA6B,gBAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,QAASC,CAAAA,GAAT,EAAe,eACWP,QAAQ,CAAC,IAAD,CADnB,wCACNQ,IADM,eACAC,OADA,8BAEeT,QAAQ,CAAC,KAAD,CAFvB,yCAENU,MAFM,eAEEC,SAFF,8BAGuBX,QAAQ,CAAC,KAAD,CAH/B,yCAGNY,UAHM,eAGMC,aAHN,eAIbZ,SAAS,CAAC,UAAM,CACdQ,OAAO,CAACL,QAAD,CAAP,CACAO,SAAS,CAAC,IAAD,CAAT,CACAE,aAAa,CAAC,KAAD,CAAb,CACD,CAJQ,CAIP,CAACD,UAAD,CAJO,CAAT,CAKA;AACA,GAAG,CAACF,MAAJ,CAAY,MAAO,KAAP,CACZ,mBACE,oBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEF,IAA7B,EACGA,IAAI,cAAG,oBAAC,OAAD,EAAS,aAAa,CAAEK,aAAxB,EAAH,cAA+C,oBAAC,IAAD,EAAM,aAAa,CAAEA,aAArB,EADtD,cAEE,oBAAC,cAAD,EACE,QAAQ,CAAC,WADX,CAEE,SAAS,CAAE,IAFb,CAGE,eAAe,KAHjB,CAIE,WAAW,CAAE,KAJf,CAKE,YAAY,KALd,CAME,GAAG,CAAE,KANP,CAOE,gBAAgB,KAPlB,CAQE,SAAS,KARX,CASE,YAAY,KATd,EAFF,CADF,CAgBD,CACD,cAAeN,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {contextAuth} from \"./utils/Context\";\nimport Main from \"./components/Auth/Main\";\nimport {isLogged} from \"./api/Login\";\nimport {ToastContainer} from \"react-toastify\";\nimport Routing from './routers/Routing';\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [logged, setLogged] = useState(false)\n  const [checkLogin, setCheckLogin] = useState(false)\n  useEffect(() => {\n    setUser(isLogged);\n    setLogged(true);\n    setCheckLogin(false);\n  },[checkLogin])\n  //Verifica si el usuario esta logueado o aun no\n  if(!logged) return null;\n  return (\n    <contextAuth.Provider value={user}>\n      {user ? <Routing setCheckLogin={setCheckLogin} /> : <Main setCheckLogin={setCheckLogin} /> }\n      <ToastContainer \n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </contextAuth.Provider>\n  );\n} \nexport default App;\n"]},"metadata":{},"sourceType":"module"}
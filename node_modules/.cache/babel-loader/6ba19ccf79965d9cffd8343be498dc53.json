{"ast":null,"code":"var _jsxFileName = \"/Users/jhairorivera/Documents/Cursos/twitter/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { contextAuth } from \"./utils/Context\";\nimport Main from \"./components/Main\";\nimport { isLogged } from \"./api/Login\";\nimport { ToastContainer } from \"react-toastify\";\nimport Routing from './routers/Routing';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [logged, setLogged] = useState(false);\n  const [checkLogin, setCheckLogin] = useState(false);\n  useEffect(() => {\n    setUser(isLogged);\n    setLogged(true);\n    setCheckLogin(false);\n  }, [checkLogin]); //Verifica si el usuario esta logueado o aun no\n\n  if (!logged) return null;\n  return /*#__PURE__*/React.createElement(contextAuth.Provider, {\n    value: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, user ? /*#__PURE__*/React.createElement(Routing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Main, {\n    setCheckLogin: setCheckLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ToastContainer, {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: true,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnFocusLoss: true,\n    draggable: true,\n    pauseOnHover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jhairorivera/Documents/Cursos/twitter/src/App.js"],"names":["React","useState","useEffect","contextAuth","Main","isLogged","ToastContainer","Routing","App","user","setUser","logged","setLogged","checkLogin","setCheckLogin"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AACA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACL,QAAD,CAAP;AACAO,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAJQ,EAIP,CAACD,UAAD,CAJO,CAAT,CAJa,CASb;;AACA,MAAG,CAACF,MAAJ,EAAY,OAAO,IAAP;AACZ,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEF,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAiB,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAEK,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,eAEE,oBAAC,cAAD;AACE,IAAA,QAAQ,EAAC,WADX;AAEE,IAAA,SAAS,EAAE,IAFb;AAGE,IAAA,eAAe,MAHjB;AAIE,IAAA,WAAW,EAAE,KAJf;AAKE,IAAA,YAAY,MALd;AAME,IAAA,GAAG,EAAE,KANP;AAOE,IAAA,gBAAgB,MAPlB;AAQE,IAAA,SAAS,MARX;AASE,IAAA,YAAY,MATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAgBD;;AACD,eAAeN,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {contextAuth} from \"./utils/Context\";\nimport Main from \"./components/Main\";\nimport {isLogged} from \"./api/Login\";\nimport {ToastContainer} from \"react-toastify\";\nimport Routing from './routers/Routing';\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [logged, setLogged] = useState(false)\n  const [checkLogin, setCheckLogin] = useState(false)\n  useEffect(() => {\n    setUser(isLogged);\n    setLogged(true);\n    setCheckLogin(false);\n  },[checkLogin])\n  //Verifica si el usuario esta logueado o aun no\n  if(!logged) return null;\n  return (\n    <contextAuth.Provider value={user}>\n      {user ? <Routing /> : <Main setCheckLogin={setCheckLogin} /> }\n      <ToastContainer \n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </contextAuth.Provider>\n  );\n} \nexport default App;\n"]},"metadata":{},"sourceType":"module"}
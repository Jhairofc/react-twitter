{"ast":null,"code":"var _jsxFileName = \"/Users/jhairorivera/Documents/Cursos/twitter/src/components/Modals/TweetModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { toast } from \"react-toastify\";\nimport classnames from \"classnames\";\nimport { Close } from \"../../utils/Icons\";\nimport { sendTweetApi } from \"../../api/Tweet\";\nimport \"../../scss/Modal.scss\";\n\nconst TweetModal = props => {\n  const {\n    show,\n    setShow,\n    setCheckLogin\n  } = props;\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (message.length > 0 && message.length <= 280) {\n      sendTweetApi(message).then(response => {\n        if (response) {\n          if (response.code < 400) {\n            setCheckLogin(true);\n            toast.success(response.message);\n            setShow(false);\n          } else toast.warning(response.message);\n        }\n      }).catch(error => toast.warning(error));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    className: \"tweet-Modal\",\n    show: show,\n    onHide: () => {\n      setShow(false);\n      setMessage(\"\");\n    },\n    centered: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Close, {\n    onClick: () => {\n      setShow(false);\n      setMessage(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: e => setMessage(e.target.value),\n    name: \"mensaje\",\n    rows: \"6\",\n    placeholder: \"Que est\\xE1s pensando?\",\n    as: \"textarea\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classnames(\"count\", {\n      error: message.length > 280\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, message.length), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: message.length > 280 || message.length < 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Tweetear\"))));\n};\n\nexport default TweetModal;","map":{"version":3,"sources":["/Users/jhairorivera/Documents/Cursos/twitter/src/components/Modals/TweetModal.js"],"names":["React","useState","Modal","Button","Form","toast","classnames","Close","sendTweetApi","TweetModal","props","show","setShow","setCheckLogin","message","setMessage","onSubmit","e","preventDefault","length","then","response","code","success","warning","catch","error","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Modal, Button, Form} from 'react-bootstrap';\nimport {toast} from \"react-toastify\";\nimport classnames from \"classnames\";\nimport {Close} from \"../../utils/Icons\";\nimport {sendTweetApi} from \"../../api/Tweet\";\nimport \"../../scss/Modal.scss\";\n\nconst TweetModal = (props) => {\n    const {show, setShow, setCheckLogin} = props;\n    const [message, setMessage] = useState(\"\");\n    const onSubmit = e =>{\n        e.preventDefault();\n        if(message.length > 0 && message.length <= 280){\n            sendTweetApi(message).then(response=>{\n                if(response){\n                    if(response.code < 400){\n                        setCheckLogin(true);\n                        toast.success(response.message);\n                        setShow(false);\n                    }\n                    else\n                        toast.warning(response.message);\n                }\n            })\n            .catch(error=> toast.warning(error));\n        }\n    };\n    return (\n        <Modal className=\"tweet-Modal\" show={show} onHide={()=>{setShow(false); setMessage(\"\"); }} centered size=\"lg\">\n            <Modal.Header>\n                <Modal.Title>\n                    <Close onClick={()=>{setShow(false); setMessage(\"\"); }} />\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={onSubmit}>\n                    <Form.Control onChange={e => setMessage(e.target.value)}\n                    name=\"mensaje\" rows=\"6\" placeholder=\"Que estÃ¡s pensando?\" as=\"textarea\" type=\"text\"/>\n                    <span className={classnames(\"count\", {error: message.length > 280})}>{message.length}</span>\n                    <Button type=\"submit\" disabled={message.length > 280 || message.length < 1} >Tweetear</Button>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    );\n}\nexport default TweetModal;"]},"metadata":{},"sourceType":"module"}
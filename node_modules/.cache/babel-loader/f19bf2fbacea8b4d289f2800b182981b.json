{"ast":null,"code":"var _jsxFileName = \"/Users/jhairorivera/Documents/Cursos/twitter/src/components/views/Profile/Tweets.js\";\nimport React, { useState, useEffect } from 'react';\nimport { map } from \"lodash\";\nimport { Image } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport { ProfileApi } from \"../../../api/ProfileAPI\";\nimport noFound from \"../../../Assets/noFound.png\";\nimport { LOCALHOST } from \"../../../utils/Constants\";\nimport \"../../../scss/Tweets.scss\";\n\nconst Tweets = props => {\n  const {\n    tweets\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Tweets\"), map(tweets, (tweet, index) => /*#__PURE__*/React.createElement(Tweet, {\n    key: index,\n    tweet: tweet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Tweets;\n\nfunction Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const [infoUser, setInfoUser] = useState(null);\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    ProfileApi(tweet.userID).then(response => {\n      if (response) setInfoUser(response); //Obtener el Avatar del usuario\n\n      setAvatar((response === null || response === void 0 ? void 0 : response.avatar) ? `${LOCALHOST}/obtenerAvatar?id=${response.id}` : noFound);\n    }).catch(() => setInfoUser({}));\n  }, [tweet]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"avatar\",\n    src: avatar,\n    roundedCircle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, infoUser === null || infoUser === void 0 ? void 0 : infoUser.nombre, \" \", infoUser === null || infoUser === void 0 ? void 0 : infoUser.apellido, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, moment(tweet.fecha).calendar())), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, tweet.mensaje)));\n}","map":{"version":3,"sources":["/Users/jhairorivera/Documents/Cursos/twitter/src/components/views/Profile/Tweets.js"],"names":["React","useState","useEffect","map","Image","moment","ProfileApi","noFound","LOCALHOST","Tweets","props","tweets","tweet","index","Tweet","infoUser","setInfoUser","avatar","setAvatar","userID","then","response","id","catch","nombre","apellido","fecha","calendar","mensaje"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,GAAR,QAAkB,QAAlB;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,OAAO,2BAAP;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAM;AAACC,IAAAA;AAAD,MAAWD,KAAjB;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKP,GAAG,CAACQ,MAAD,EAAS,CAACC,KAAD,EAAQC,KAAR,kBACT,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAZ;AAAmB,IAAA,KAAK,EAAED,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFR,CADJ;AAQH,CAVD;;AAWA,eAAeH,MAAf;;AACA,SAASK,KAAT,CAAeJ,KAAf,EAAqB;AACjB,QAAM;AAAEE,IAAAA;AAAF,MAAYF,KAAlB;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,IAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,UAAU,CAACM,KAAK,CAACO,MAAP,CAAV,CAAyBC,IAAzB,CAA8BC,QAAQ,IAAE;AACpC,UAAGA,QAAH,EACIL,WAAW,CAACK,QAAD,CAAX,CAFgC,CAGpC;;AACAH,MAAAA,SAAS,CAAC,CAAAG,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEJ,MAAV,IAAoB,GAAET,SAAU,qBAAoBa,QAAQ,CAACC,EAAG,EAAhE,GAAoEf,OAArE,CAAT;AACH,KALD,EAKGgB,KALH,CAKS,MAAKP,WAAW,CAAC,EAAD,CALzB;AAMH,GAPQ,EAOP,CAACJ,KAAD,CAPO,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,GAAG,EAAEK,MAA/B;AAAuC,IAAA,aAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QADL,aACKA,QADL,uBACKA,QAAQ,CAAES,MADf,OACwBT,QADxB,aACwBA,QADxB,uBACwBA,QAAQ,CAAEU,QADlC,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOpB,MAAM,CAACO,KAAK,CAACc,KAAP,CAAN,CAAoBC,QAApB,EAAP,CAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMf,KAAK,CAACgB,OAAZ,CALJ,CAFJ,CADJ;AAYH","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {map} from \"lodash\";\nimport {Image} from \"react-bootstrap\";\nimport moment from \"moment\";\nimport {ProfileApi} from \"../../../api/ProfileAPI\";\nimport noFound from \"../../../Assets/noFound.png\";\nimport {LOCALHOST} from \"../../../utils/Constants\";\nimport \"../../../scss/Tweets.scss\";\nconst Tweets = (props) => {\n    const {tweets} = props;\n    return (\n        <div>\n            <h3>Tweets</h3>\n            {map(tweets, (tweet, index)=>(\n                <Tweet key={index} tweet={tweet} />\n            ))}\n        </div>\n    );\n}\nexport default Tweets;\nfunction Tweet(props){\n    const { tweet } = props;\n    const [infoUser, setInfoUser] = useState(null);\n    const [avatar, setAvatar] = useState(null);\n    useEffect(() => {\n        ProfileApi(tweet.userID).then(response=>{\n            if(response)\n                setInfoUser(response);\n            //Obtener el Avatar del usuario\n            setAvatar(response?.avatar ? `${LOCALHOST}/obtenerAvatar?id=${response.id}` : noFound);\n        }).catch(()=> setInfoUser({}))\n    },[tweet])\n    return(\n        <div className=\"tweet\">\n            <Image className=\"avatar\" src={avatar} roundedCircle />\n            <div>\n                <div className=\"name\">\n                    {infoUser?.nombre} {infoUser?.apellido}\n                    <span>{moment(tweet.fecha).calendar()}</span>\n                </div>\n                <div>{tweet.mensaje}</div>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}
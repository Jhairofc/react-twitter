{"ast":null,"code":"import _defineProperty from\"/Users/jhairorivera/Documents/Cursos/twitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/jhairorivera/Documents/Cursos/twitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/jhairorivera/Documents/Cursos/twitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Button,Form,Spinner}from'react-bootstrap';import'../../scss/Login.scss';import{values,size}from\"lodash\";import{toast}from\"react-toastify\";import{isEmailValid}from\"../../utils/Validations\";import{LoginApi,setToken}from\"../../api/Login\";var Login=function Login(props){var setShow=props.setShow,setCheckLogin=props.setCheckLogin;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),spinner=_useState2[0],setSpinner=_useState2[1];var _useState3=useState(defaultData),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var onSubmit=function onSubmit(e){e.preventDefault();//validar campos\nvar count=0;values(data).some(function(value){value&&count++;return null;});if(count!==size(data))toast.warning(\"Todos los campos deben ser llenados\");else if(!isEmailValid(data.email))toast.warning(\"El correo electrónico no es válido\");else{setSpinner(true);LoginApi(data).then(function(response){if(response.code){if(response.code!==500)toast.warning(response.message);else toast.error(response.message);}else{setCheckLogin(true);setToken(response.token);setShow(false);}}).catch(function(error){return error;}).finally(function(){return setSpinner(false);});}};var onChange=function onChange(e){setData(_objectSpread(_objectSpread({},data),{},_defineProperty({},e.target.name,e.target.value)));};return/*#__PURE__*/React.createElement(\"div\",{className:\"login\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Iniciar Sesi\\xF3n\"),/*#__PURE__*/React.createElement(Form,{onSubmit:onSubmit,onChange:onChange},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Control,{name:\"email\",defaultValue:data.email,type:\"email\",placeholder:\"Correo Electr\\xF3nico\"})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Control,{name:\"password\",defaultValue:data.password,type:\"password\",placeholder:\"Password\"})),/*#__PURE__*/React.createElement(Button,{type:\"Submit\",variant:\"primary\"},!spinner?\"Iniciar Sesión\":/*#__PURE__*/React.createElement(Spinner,{animation:\"border\"}))));};export default Login;function defaultData(){return{email:\"\",password:\"\"};}","map":{"version":3,"sources":["/Users/jhairorivera/Documents/Cursos/twitter/src/components/Auth/Login.js"],"names":["React","useState","Button","Form","Spinner","values","size","toast","isEmailValid","LoginApi","setToken","Login","props","setShow","setCheckLogin","spinner","setSpinner","defaultData","data","setData","onSubmit","e","preventDefault","count","some","value","warning","email","then","response","code","message","error","token","catch","finally","onChange","target","name","password"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {Button, Form, Spinner} from 'react-bootstrap';\nimport '../../scss/Login.scss';\nimport {values, size} from \"lodash\";\nimport {toast} from \"react-toastify\";\nimport {isEmailValid} from \"../../utils/Validations\";\nimport {LoginApi, setToken} from \"../../api/Login\";\nconst Login = (props) => {\n    const {setShow, setCheckLogin} = props;\n    const [spinner, setSpinner] = useState(false);\n    const [data, setData] = useState(defaultData)\n    const onSubmit = e => {\n        e.preventDefault();\n        //validar campos\n        let count = 0;\n        values(data).some(value=>{\n            value && count++\n            return null\n        })\n        if(count !== size(data))\n            toast.warning(\"Todos los campos deben ser llenados\");\n            else if (!isEmailValid(data.email))\n                toast.warning(\"El correo electrónico no es válido\");\n                else{\n                    setSpinner(true);\n                    LoginApi(data).then(response=>{\n                        if(response.code){\n                            if(response.code !== 500)\n                                toast.warning(response.message);\n                            else \n                                toast.error(response.message);\n                        }else{\n                            setCheckLogin(true);\n                            setToken(response.token);\n                            setShow(false); \n                        }\n                    })\n                    .catch(error => error)\n                    .finally(()=> setSpinner(false) )\n                }\n    };\n    const onChange = e =>{\n        setData({...data, [e.target.name]: e.target.value});\n    }\n    return (\n        <div className=\"login\">\n            <h3>Iniciar Sesión</h3>\n            <Form onSubmit={onSubmit} onChange={onChange} >\n                <Form.Group>\n                    <Form.Control name=\"email\" defaultValue={data.email}\n                    type=\"email\" placeholder=\"Correo Electrónico\"></Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control name=\"password\" defaultValue={data.password}\n                    type=\"password\" placeholder=\"Password\"></Form.Control>\n                </Form.Group>\n                <Button type=\"Submit\" variant=\"primary\">\n                    {!spinner ? \"Iniciar Sesión\" : <Spinner animation=\"border\" /> }\n                </Button>\n            </Form>\n        </div>\n    );\n}\nexport default Login;\nfunction defaultData(){\n    return {\n        email: \"\",\n        password: \"\"\n    }\n}"]},"metadata":{},"sourceType":"module"}
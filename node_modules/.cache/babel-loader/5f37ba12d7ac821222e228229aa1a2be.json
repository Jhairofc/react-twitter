{"ast":null,"code":"import { LOCALHOST } from \"../utils/Constants\";\nexport function RegisterApi(user) {\n  const uri = `${LOCALHOST}/registro`;\n  const userAPI = { ...user,\n    email: user.email.toLowerCase(),\n    fechanac: new Date()\n  }; //Eliminar del json el atributo repassword\n\n  delete userAPI.repassword; //parametros antes de consumir la API\n\n  const params = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: userAPI\n  };\n  return fetch(uri, params).then(response => {\n    if (response.status > 200 && response.status < 300) return response.json();\n    return {\n      code: response.status,\n      message: response.status + \" \" + response.json()\n    };\n  }).then(result => result).catch(error => error);\n}","map":{"version":3,"sources":["/Users/jhairorivera/Documents/Cursos/twitter/src/api/RegisterAPI.js"],"names":["LOCALHOST","RegisterApi","user","uri","userAPI","email","toLowerCase","fechanac","Date","repassword","params","method","headers","body","fetch","then","response","status","json","code","message","result","catch","error"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AACA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AAC7B,QAAMC,GAAG,GAAI,GAAEH,SAAU,WAAzB;AACA,QAAMI,OAAO,GAAG,EACZ,GAAGF,IADS;AAEZG,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAAL,CAAWC,WAAX,EAFK;AAGZC,IAAAA,QAAQ,EAAE,IAAIC,IAAJ;AAHE,GAAhB,CAF6B,CAO7B;;AACA,SAAOJ,OAAO,CAACK,UAAf,CAR6B,CAS7B;;AACA,QAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFE;AAKXC,IAAAA,IAAI,EAAET;AALK,GAAf;AAOA,SAAOU,KAAK,CAACX,GAAD,EAAMO,MAAN,CAAL,CAAmBK,IAAnB,CAAwBC,QAAQ,IAAE;AACrC,QAAGA,QAAQ,CAACC,MAAT,GAAiB,GAAjB,IAAwBD,QAAQ,CAACC,MAAT,GAAkB,GAA7C,EACI,OAAOD,QAAQ,CAACE,IAAT,EAAP;AACJ,WAAO;AAACC,MAAAA,IAAI,EAAEH,QAAQ,CAACC,MAAhB;AAAwBG,MAAAA,OAAO,EAAEJ,QAAQ,CAACC,MAAT,GAAkB,GAAlB,GAAwBD,QAAQ,CAACE,IAAT;AAAzD,KAAP;AACH,GAJM,EAKNH,IALM,CAKDM,MAAM,IAAIA,MALT,EAMNC,KANM,CAMAC,KAAK,IAAIA,KANT,CAAP;AAUH","sourcesContent":["import {LOCALHOST} from \"../utils/Constants\";\nexport function RegisterApi(user){\n    const uri = `${LOCALHOST}/registro`;\n    const userAPI = {\n        ...user,\n        email: user.email.toLowerCase(),\n        fechanac: new Date()\n    }\n    //Eliminar del json el atributo repassword\n    delete userAPI.repassword;\n    //parametros antes de consumir la API\n    const params = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: userAPI\n    }\n    return fetch(uri, params).then(response=>{\n        if(response.status >200 && response.status < 300)\n            return response.json();\n        return {code: response.status, message: response.status + \" \" + response.json() }\n    })\n    .then(result => result)\n    .catch(error => error);\n    \n\n\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { LOCALHOST } from \"../utils/Constants\";\nimport { getToken } from \"./Login\";\nexport function sendTweetApi(message) {\n  const uri = `${LOCALHOST}/tweet`;\n  const tweet = {\n    mensaje: message\n  };\n  const params = {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(tweet)\n  };\n  return fetch(uri, params).then(response => {\n    if (response.status >= 400) return {\n      code: response.status,\n      message: \"Error al enviar el tweet, intente más tarde\"\n    };else return {\n      code: response.status,\n      message: \"Tweet enviado!\"\n    };\n  }).then(result => result).catch(error => error);\n}\nexport function getTweets(id, page) {\n  const uri = `${LOCALHOST}/mytweets?id=${id}&pagina=${page}`;\n  const params = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    }\n  };\n  return fetch(uri, params).then(response => response.json()).then(result => result).catch(error => error);\n}\nexport function getTweetsFollowers(page = 1) {\n  const uri = `${LOCALHOST}/tweets?page=${page}`;\n  const params = {\n    headers: {\n      \"Contenet-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    }\n  };\n  return fetch(uri, params).then(response => response.json()).then(result => result).catch(error => error);\n}","map":{"version":3,"sources":["/Users/jhairorivera/Documents/Cursos/twitter/src/api/Tweet.js"],"names":["LOCALHOST","getToken","sendTweetApi","message","uri","tweet","mensaje","params","method","headers","Authorization","body","JSON","stringify","fetch","then","response","status","code","result","catch","error","getTweets","id","page","json","getTweetsFollowers"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,OAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA8B;AACjC,QAAMC,GAAG,GAAI,GAAEJ,SAAU,QAAzB;AACA,QAAMK,KAAK,GAAG;AACVC,IAAAA,OAAO,EAAEH;AADC,GAAd;AAGA,QAAMI,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAC;AACJC,MAAAA,aAAa,EAAG,UAAST,QAAQ,EAAG;AADhC,KAFG;AAKXU,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,KAAf;AALK,GAAf;AAOA,SAAOS,KAAK,CAACV,GAAD,EAAMG,MAAN,CAAL,CAAmBQ,IAAnB,CAAwBC,QAAQ,IAAE;AACrC,QAAGA,QAAQ,CAACC,MAAT,IAAkB,GAArB,EACI,OAAO;AAACC,MAAAA,IAAI,EAAEF,QAAQ,CAACC,MAAhB;AAAwBd,MAAAA,OAAO,EAAE;AAAjC,KAAP,CADJ,KAGI,OAAO;AAACe,MAAAA,IAAI,EAAEF,QAAQ,CAACC,MAAhB;AAAwBd,MAAAA,OAAO,EAAE;AAAjC,KAAP;AACP,GALM,EAKJY,IALI,CAKCI,MAAM,IAAGA,MALV,EAMNC,KANM,CAMAC,KAAK,IAAEA,KANP,CAAP;AAOH;AACD,OAAO,SAASC,SAAT,CAAmBC,EAAnB,EAAuBC,IAAvB,EAA4B;AAC/B,QAAMpB,GAAG,GAAI,GAAEJ,SAAU,gBAAeuB,EAAG,WAAUC,IAAK,EAA1D;AACA,QAAMjB,MAAM,GAAG;AACXE,IAAAA,OAAO,EAAC;AACJ,sBAAgB,kBADZ;AAEJC,MAAAA,aAAa,EAAG,UAAST,QAAQ,EAAG;AAFhC;AADG,GAAf;AAMA,SAAOa,KAAK,CAACV,GAAD,EAAMG,MAAN,CAAL,CAAmBQ,IAAnB,CAAwBC,QAAQ,IAAGA,QAAQ,CAACS,IAAT,EAAnC,EACNV,IADM,CACDI,MAAM,IAAGA,MADR,EAENC,KAFM,CAEAC,KAAK,IAAEA,KAFP,CAAP;AAGH;AACD,OAAO,SAASK,kBAAT,CAA4BF,IAAI,GAAG,CAAnC,EAAqC;AACxC,QAAMpB,GAAG,GAAI,GAAEJ,SAAU,gBAAewB,IAAK,EAA7C;AACA,QAAMjB,MAAM,GAAG;AACXE,IAAAA,OAAO,EAAC;AACJ,uBAAiB,kBADb;AAEJC,MAAAA,aAAa,EAAG,UAAST,QAAQ,EAAG;AAFhC;AADG,GAAf;AAMA,SAAOa,KAAK,CAACV,GAAD,EAAMG,MAAN,CAAL,CAAmBQ,IAAnB,CAAwBC,QAAQ,IAAEA,QAAQ,CAACS,IAAT,EAAlC,EACNV,IADM,CACDI,MAAM,IAAEA,MADP,EAENC,KAFM,CAEAC,KAAK,IAAEA,KAFP,CAAP;AAGH","sourcesContent":["import {LOCALHOST} from \"../utils/Constants\";\nimport {getToken} from \"./Login\";\nexport function sendTweetApi(message){\n    const uri = `${LOCALHOST}/tweet`;\n    const tweet = {\n        mensaje: message\n    };\n    const params = {\n        method: \"POST\",\n        headers:{\n            Authorization: `Bearer ${getToken()}`\n        },\n        body: JSON.stringify(tweet)\n    }\n    return fetch(uri, params).then(response=>{\n        if(response.status >=400)\n            return {code: response.status, message: \"Error al enviar el tweet, intente más tarde\"}\n        else\n            return {code: response.status, message: \"Tweet enviado!\"}    \n    }).then(result=> result)\n    .catch(error=>error);\n}\nexport function getTweets(id, page){\n    const uri = `${LOCALHOST}/mytweets?id=${id}&pagina=${page}`;\n    const params = {\n        headers:{\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getToken()}`\n        }\n    }\n    return fetch(uri, params).then(response=> response.json())\n    .then(result=> result)\n    .catch(error=>error);\n}\nexport function getTweetsFollowers(page = 1){\n    const uri = `${LOCALHOST}/tweets?page=${page}`;\n    const params = {\n        headers:{\n            \"Contenet-Type\": \"application/json\",\n            Authorization: `Bearer ${getToken()}`\n        }\n    }\n    return fetch(uri, params).then(response=>response.json())\n    .then(result=>result)\n    .catch(error=>error);\n}"]},"metadata":{},"sourceType":"module"}